git (software) is a distributed version control system which helps developers to work/collaborate on a project easily. It helps to track changes in the project and update the project when a lot of developers are working on a single project.
git can be used through a GUI or a CLI (command line interface: git bash: unix based terminal.). Through CLI, we get more control. [Right click on any directory/folder --> open git gui/open git bash]
We should do the below settings to let others know, who did the changes to the project.
[git bash]
- git config --global user.name: To check the current user name setting
- git config --global user.name gautamahuja: To set the user name to gautam ahuja.
- git config --global user.email ahuja.gautam1996@gmail.com: To set the email to ahuja.gautam1996@gmail.com.

ls: to list all the files in the current working directory.
ls -lart: shows all the files (hidden as well)

git init: When you run the git init command, Git creates/initializes a new git repository along with the .git folder (hidden: cotains all the metadata regarding the repo) in the current working directory.

git status: shows the status of the repo. [if there are any untracked files (which can be tracked by Git)]

Some important jargons/terminologies:
- Untracked files: These are the files that you have created, but git is not recording (tracking changes) them. If you want git to track changes in it, you push it to the staging area.
- Staging: Preparation done (setting hairs, beard etc) before taking a picture/snapshot (record of the change)
- Commit: Once files are in staging area, you can commit them so that changes get's recorded in the codebase. Commits are always done when there are MEANINGFUL CHANGES.

To push the file to the staging area, write 'git add filename'. Then run 'git status'. You will see Git will say files are ready to be committed.

To save the state of files (snapshot) write 'git commit'. It will open an editor and ask for commit message. write 'initial commit' and save-->close the editor. your commit is done. write 'git status' to check.

to create new blank file, write the command, 'touch contact.html'. after that if do git status, it shows all the changes in your repo.

git add -A : To push all the files in staging area at once.

if you don't want to add a commit message in an editor, simply write, git commit -m "commit message".

clear: to clear the terminal.

If you loose all your data in the repository due to some mistake, you can reverse it to the last commit point, using the command 'git checkout file_name' or 'git checkout -f' [for all files]

git log: To see all the changes/Commits. 'q' + enter to exit.

git log -p -2 : Shows the last 2 committs [fitering the git logs]

git diff : Shows the difference/changes made between staging and working done. 'diff' stands for difference.

git diff --staged: Compares staging with last commit.

